 {@Query} factory for creating annotations, decorators or DSL.

 ## Example as TypeScript Decorator

 ```
 import {Query, QueryList, Component, View} from "angular2/angular2";

 @Component({...})
 @View({...})
 class MyComponent {
   constructor(@Query(SomeType) queryList: QueryList) {
     ...
   }
 }
 ```

 ## Example as ES5 DSL

 ```
 var MyComponent = ng
   .Component({...})
   .View({...})
   .Class({
     constructor: [new ng.Query(SomeType), function(queryList) {
       ...
     }]
   })
 ```

 ## example as TypeScript
 Component({
   selector: 'bank-account',
   template: `
     Bank Name:
     Account Id:
   `
 })
 class BankAccount {
   @Input() bankName: string;
   @Input('account-id') id: string;

   // this property is not bound, and won't be automatically updated by Angular
   normalizedBankName: string;
 }

 ## example as Javascript

 var BankAccount = ng
   .Component({
     selector: 'bank-account',
     template: '<b>{{ bankName }}<b><span>{{ id }}',
     inputs: [
       'bankName',
       'id: accountId'
     ]
   })
   .Class({
     constructor: function() {
       this.bankName = null;
       this.id = null;
     }
   });
